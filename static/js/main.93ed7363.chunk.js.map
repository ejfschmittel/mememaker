{"version":3,"sources":["pixijs/PixiApp.js","redux/canvasObjects/canvasObjects.types.js","redux/canvasObjects/canvasObjects.reducer.js","redux/canvas/canvas.types.js","redux/canvas/canvas.reducer.js","redux/root-reducer.js","redux/store.js","utils/images.utils.js","redux/canvas/canvas.actions.js","components/CanvasOverlay.jsx","redux/canvasObjects/canvasOjbects.actions.js","utils/math.utils.js","pixijs/PixiCurrentObjectUI.js","components/Canvas.jsx","components/ElementEditorText.jsx","components/ElementEditorImage.jsx","components/UIPanelCurrentElement.jsx","components/ElementCreatorText.jsx","components/ImageUpload.jsx","components/FaceImageDisplay.jsx","components/LoadingOverlay.jsx","components/FaceExtractor.jsx","components/ElementCreatorImage.jsx","components/UIPanelCreatElement.jsx","components/UIPanelElementOverview.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","CANVAS_OBJECT_TYPES","defaultState","objectList","objects","activeObject","reducer","state","action","type","types","canvasObject","payload","id","console","log","data","filter","deleted","baseImage","width","height","showOverlay","canvasRef","rootReducer","combineReducers","canvasObjects","canvas","store","createStore","loadImage","image","a","Promise","resolve","reject","img","Image","onload","onerror","src","URL","createObjectURL","loadImageFromURL","imageURL","canvasToBlob","toBlob","blob","setCanvasSize","setBaseImage","memeTemplatePaths","map","imgName","process","ImageOverviewAndSelector","images","onImageClick","onCustomImageSelect","e","target","files","FileReader","length","fr","result","readAsDataURL","className","onChange","imgPath","onClick","CanvasStartOverlay","show","dispatch","useDispatch","style","display","createImageObject","uuidv4","x","getState","y","rotation","imageWidth","imageHeight","updateObject","setActiveObject","objectID","normalizeValues","obj","Object","keys","reduce","o","key","value","Math","round","CurrentObjectEdtior","createGraphic","container","PIXI","graphics","lineStyle","drawRect","addChild","zIndex","texture","renderer","generateTexture","sprite","getGraphic","graphic","setCurrentObject","object","elements","currentObject","currentPixiElement","onRotationStart","event","onRotationMove","onRotationEnd","currentObjectUI","displayBaseImage","createDisplayObject","displayObject","from","text","fill","string2hex","stroke","strokeThickness","strokeWidth","createTextObject","interactive","buttonMode","anchor","set","onDragMove","currentTarget","dragging","newPosition","getLocalPosition","parent","onDragEnd","movable","alpha","onDragStart","on","stage","updateDisplayObject","position","PI","scaleX","scaleY","scale","updateImageDisplayObject","fontSize","parseInt","updateTextDisplayObject","renderObject","resizeStage","view","resize","setCanvasDimensions","subscribe","imgSprite","removeChild","renderBaseImage","element","removeObject","forEach","PixiCurrentObjectUI","renderUI","children","render","Canvas","useRef","canvasSize","useSelector","canvasObjectList","useEffect","dimensions","resizeTo","backgroundColor","resolution","preserveDrawingBuffer","appendChild","sortableChildren","setUpApp","current","ref","ElementEditorText","name","nObject","ElementEditorImage","CurrentlySelectedElementUI","renderActiveObjectEdtior","TextCreator","useState","setText","ImageUpload","accept","FaceImageDisplay","setImage","getImage","LoadingOverlay","isLoading","class","blazefaceModel","bodyPixModel","FaceExtractor","setIsLoading","faceImages","setFaceImages","loadModels","blazeface","bodyPix","architecture","outputStride","quantBytes","startFaceExtraction","extractFaces","faces","predictFaces","predictedFaceDimensions","i","cropFace","segmentFace","faceImage","split","push","predictions","getContext","drawImage","estimateFaces","predictionDimensions","start","topLeft","end","bottomRight","size","startY","max","startX","segmentPerson","ctx","getImageData","imgData","newImg","createImageData","newImgData","r","g","b","putImageData","disabled","idx","ImageCreator","setIsLoadingImage","onImageChange","loadedImage","TAB","CreateElementUI","activeTab","setActiveTab","link","document","createElement","download","href","toDataURL","click","renderTab","BaseImageDisplay","canvasDimensions","splitPath","CanvasObjectLabel","active","CanvasElementOverviewUI","App","UIPanelElementOverview","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.93ed7363.chunk.js","sourcesContent":["import * as PIXI from \"pixi.js\"\r\nimport {CANVAS_OBJECT_TYPES} from \"../redux/canvasObjects/canvasObjects.types\"\r\nimport store from \"../redux/store\"\r\nimport {updateObject, setActiveObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport {degreeToRadians} from \"../utils/math.utils\"\r\nimport PixiCurrentObjectUI from \"./PixiCurrentObjectUI\"\r\n\r\nexport let app;\r\n\r\nlet currentObjectUI = null;\r\n\r\nexport const setUpApp = (container, dimensions) => {\r\n    if(app) return null; \r\n\r\n    app = new PIXI.Application({\r\n        resizeTo: container, backgroundColor: 0xffffff, resolution: 1, preserveDrawingBuffer: true\r\n    });\r\n\r\n\r\n    \r\n    container.appendChild(app.view)  \r\n    app.stage.sortableChildren = true; \r\n\r\n\r\n}\r\n\r\nlet elements = {}\r\nlet displayBaseImage = null;\r\n\r\nconst displayObjectExists = (id) => {\r\n    return id in elements\r\n}\r\n\r\nconst setCanvasDimensions = (width, height) => {\r\n    app.view.width = width;\r\n    app.view.height = height;\r\n    app.renderer.resize(width, height);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst createTextObject = (object) => {\r\n    const text = new PIXI.Text(object.text, new PIXI.TextStyle({\r\n        fill: object.fill ? PIXI.utils.string2hex(object.fill) : 0x000000,                     \r\n        stroke: object.stroke ? PIXI.utils.string2hex(object.stroke) : 0x000000,                                      \r\n        strokeThickness: object?.strokeWidth || 0,\r\n    }))\r\n    return text;\r\n}\r\n\r\nconst createImageObject = (object) => {\r\n    const image = PIXI.Sprite.from(object.src); \r\n    return image;\r\n}\r\n\r\nconst createDisplayObject = (object) => {\r\n\r\n    let displayObject = null;\r\n    switch(object.type){\r\n        case CANVAS_OBJECT_TYPES.IMAGE:\r\n            displayObject = createImageObject(object);\r\n            break;\r\n        case CANVAS_OBJECT_TYPES.TEXT:\r\n            displayObject = createTextObject(object);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n    if(displayObject == null) return;\r\n\r\n\r\n    displayObject.interactive = true;\r\n    displayObject.buttonMode = true;\r\n\r\n    displayObject.anchor.set(.5,.5)\r\n    displayObject.zIndex = 5;\r\n\r\n    const onDragMove = (event) => {\r\n        const sprite = event.currentTarget \r\n        if (sprite.dragging) {\r\n            const newPosition = sprite?.data.getLocalPosition(sprite.parent);\r\n            store.dispatch(updateObject(object.id,{x: newPosition.x, y: newPosition.y}))\r\n        }\r\n    }\r\n\r\n    const onDragEnd = (event) => {\r\n        const movable = event.currentTarget\r\n        movable.dragging = false;\r\n        movable.alpha = 1;\r\n    }\r\n\r\n    const onDragStart = (event) => {\r\n\r\n        const movable = event.currentTarget\r\n        movable.data = event.data;\r\n        movable.dragging = true;\r\n        movable.alpha = .5;\r\n        store.dispatch(setActiveObject(object.id))\r\n       \r\n    }\r\n\r\n    displayObject    // events for drag start\r\n    .on('mousedown', onDragStart)\r\n    .on('touchstart', onDragStart)\r\n    // events for drag end\r\n    .on('mouseup', onDragEnd)\r\n    .on('mouseupoutside', onDragEnd)\r\n    .on('touchend', onDragEnd)\r\n    .on('touchendoutside', onDragEnd)\r\n    // events for drag move\r\n    .on('mousemove', onDragMove)\r\n    .on('touchmove', onDragMove);\r\n    elements[object.id] = displayObject;\r\n    app.stage.addChild(displayObject)\r\n}\r\n\r\nconst updateImageDisplayObject = (object) => {\r\n    const displayObject = elements[object.id];\r\n    const scaleX = object.width/object.imageWidth || 1;\r\n    const scaleY = object.height/object.imageHeight || 1;\r\n    displayObject.scale.set(scaleX, scaleY)\r\n}\r\n\r\nconst updateTextDisplayObject = (object) => {\r\n    console.log(object)\r\n    const displayObject = elements[object.id];\r\n    displayObject.style = new PIXI.TextStyle({\r\n        fontSize: parseInt(object?.fontSize) || 32,\r\n        fill: object.fill ? PIXI.utils.string2hex(object.fill) : 0x000000,\r\n        strokeThickness: object?.strokeWidth || 0,\r\n        stroke: object.stroke ? PIXI.utils.string2hex(object.stroke) : 0x000000,\r\n    })\r\n    displayObject.text = object.text;\r\n}\r\n\r\nconst updateDisplayObject = (object) => {\r\n    const displayObject = elements[object.id];\r\n    // general updates\r\n    displayObject.position.set(object.x, object.y)\r\n    displayObject.rotation = object?.rotation ?  degreeToRadians(object.rotation) : 0\r\n\r\n    // specifci updates\r\n\r\n    switch(object.type){\r\n        case CANVAS_OBJECT_TYPES.IMAGE:\r\n            updateImageDisplayObject(object)\r\n            break;\r\n        case CANVAS_OBJECT_TYPES.TEXT:\r\n            updateTextDisplayObject(object)\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst renderObject = (object) => {\r\n    if(displayObjectExists(object.id)){\r\n        // update object\r\n        updateDisplayObject(object)\r\n    }else{\r\n        // create object\r\n        createDisplayObject(object)\r\n\r\n    }\r\n\r\n\r\n   \r\n}\r\n\r\n\r\nconst renderBaseImage = (baseImage) => {\r\n\r\n    // picture changed\r\n    // picture added\r\n    // picture removed\r\n    \r\n    if(baseImage && displayBaseImage == null){\r\n        const imgSprite = PIXI.Sprite.from(baseImage.src);\r\n        displayBaseImage = imgSprite;\r\n        app.stage.addChild(imgSprite);\r\n    }else if(baseImage == null && displayBaseImage){\r\n        // remove base image\r\n        app.stage.removeChild(baseImage);\r\n        displayBaseImage = null;\r\n    }else if(baseImage && displayBaseImage){\r\n        if(baseImage.src !== displayBaseImage.src){\r\n            // remove old and add new\r\n            app.stage.removeChild(displayBaseImage)\r\n            const imgSprite = PIXI.Sprite.from(baseImage.src);\r\n            displayBaseImage = imgSprite;\r\n            app.stage.addChild(imgSprite);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nconst resizeStage = ({width, height}) => {\r\n    setCanvasDimensions(width, height)\r\n}\r\n\r\n// remove object\r\n\r\n\r\nconst removeObject = (id) => {\r\n    const element = elements[id]\r\n    app.stage.removeChild(element)\r\n    elements[id] = null\r\n}\r\n\r\nexport const render = () => {\r\n    console.log(\"rerender\")\r\n   const state = store.getState();\r\n   console.log(state)\r\n   \r\n   // render base image\r\n   resizeStage(state.canvas)\r\n   renderBaseImage(state.canvas.baseImage)\r\n   \r\n   const objectList = state.canvasObjects.objectList;\r\n   const objects = state.canvasObjects.objects;\r\n   const currentObject = state.canvasObjects.activeObject;\r\n\r\n   // clear deleted objects = \r\n   Object.keys(objects).map((id) => {\r\n    const object = objects[id];\r\n    if(object.deleted) removeObject(id)\r\n   })\r\n \r\n   objectList.forEach((objectID) => {\r\n      \r\n        // create or update\r\n        const object = objects[objectID];\r\n\r\n        // render object\r\n        renderObject(object)\r\n\r\n   })\r\n\r\n\r\n   if(!currentObjectUI){\r\n       currentObjectUI = new PixiCurrentObjectUI(app)\r\n    \r\n\r\n       console.log(currentObjectUI)\r\n       app.stage.addChild(currentObjectUI);\r\n     \r\n\r\n      \r\n   }\r\n\r\n   // handle current object ui\r\n   currentObjectUI.setCurrentObject(currentObject ? objects[currentObject] : null, elements)\r\n   currentObjectUI.renderUI()\r\n\r\n   console.log(app.stage.children)\r\n\r\n\r\n\r\n   app.render(app.stage);\r\n}\r\n\r\nstore.subscribe(render)\r\n\r\n\r\n\r\n\r\n","\r\nexport default {\r\n    DELETE_CANVAS_OBJECT: \"DELETE_CANVAS_OBJECT\",\r\n    CREATE_CANVAS_OBJECT: \"CREATE_CANVAS_OBJECT\",\r\n    UPDATE_CANVAS_OBJECT: \"UPDATE_CANVAS_OBJECT\",\r\n    SET_ACTIVE_OBJECT: \"SET_ACTIVE_OBJECT\"\r\n}\r\n\r\nexport const CANVAS_OBJECT_TYPES = {\r\n    TEXT: \"TEXT\",\r\n    IMAGE: \"IMAGE\"\r\n}","\r\nimport types from \"./canvasObjects.types\"\r\n\r\nconst defaultState = {\r\n    objectList: [],\r\n    objects: {},\r\n    activeObject: null,\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case types.CREATE_CANVAS_OBJECT: \r\n            const canvasObject = action.payload\r\n            const objectList = [...state.objectList, canvasObject.id]\r\n            const objects = {...state.objects, [canvasObject.id]: canvasObject}\r\n            return {objectList,objects, activeObject: canvasObject.id};\r\n        case types.UPDATE_CANVAS_OBJECT:    \r\n            console.log(\"update canvas object\")\r\n            console.log(action)\r\n            return {...state, objects: {...state.objects, [action.payload.id]: {\r\n                ...state.objects[action.payload.id],\r\n                ...action.payload.data\r\n            }}};\r\n\r\n        \r\n        case types.DELETE_CANVAS_OBJECT: \r\n            // remove from object list\r\n            // remove from objects\r\n            // remove currrent\r\n            return {\r\n                ...state, \r\n                activeObject: state.activeObject == action.payload ? null : state.activeObject,\r\n                objectList: state.objectList.filter((id) => id !== action.payload),\r\n                objects: {\r\n                    ...state.objects,\r\n                    [action.payload]: { deleted:true }\r\n                }\r\n            };\r\n\r\n        case types.SET_ACTIVE_OBJECT:\r\n            return {...state, activeObject: action.payload}\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","export default {\r\n    SET_CANVAS_SIZE: \"SET_CANVAS_SIZE\",\r\n    REMOVE_BASE_IMAGE: \"REMOVE_BASE_IMAGE\",\r\n    SET_BASE_IMAGE: \"SET_BASE_IMAGE\",\r\n    HIDE_OVERLAY: \"HIDE_OVERLAY\",\r\n    SHOW_OVERLAY: \"SHOW_OVERLAY\",\r\n    SET_CANVAS: \"SET_CANVAS\",\r\n\r\n}","\r\nimport types from \"./canvas.types\"\r\n\r\nconst defaultState = {\r\n    baseImage: null,\r\n    width: 600,\r\n    height: 400,\r\n    showOverlay: true,\r\n    canvasRef: null,\r\n}\r\n\r\n\r\nconst reducer = (state = defaultState, action) => {\r\n    switch(action.type){\r\n\r\n        case types.SET_CANVAS_SIZE: \r\n            return {...state, width: action.payload.width, height: action.payload.height};\r\n        case types.SET_BASE_IMAGE:\r\n            return {...state, showOverlay: false, baseImage: action.payload}\r\n        case types.REMOVE_BASE_IMAGE:\r\n            return {...state}\r\n\r\n        case types.SET_CANVAS:\r\n            return {...state, canvasRef: action.payload}\r\n\r\n        case types.HIDE_OVERLAY:\r\n            return {...state, showOverlay: false}\r\n        case types.SHOW_OVERLAY:\r\n            return {...state, showOverlay: true}\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\n\r\nimport canvasObjects from \"./canvasObjects/canvasObjects.reducer\"\r\nimport canvas from \"./canvas/canvas.reducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    canvasObjects,\r\n    canvas,\r\n})\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\nimport rootReducer from \"./root-reducer\"\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store;","export const loadImage = async (image) => {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        img.onload = () => resolve(img)\r\n        img.onerror = reject\r\n        img.src  =  URL.createObjectURL(image)    \r\n    })\r\n}\r\n\r\nexport const loadImageFromURL = async (imageURL) => {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        img.onload = () => resolve(img)\r\n        img.onerror = reject\r\n        img.src  =  imageURL  \r\n    })\r\n}\r\n\r\nexport const canvasToBlob = async (canvas) => {\r\n    return new Promise((resolve, reject) => {\r\n        canvas.toBlob((blob) => {\r\n            resolve(blob)\r\n        })\r\n    })\r\n}\r\n","import types from \"./canvas.types\"\r\n\r\nexport const setCanvasSize = (width, height) => ({\r\n    type: types.SET_CANVAS_SIZE,\r\n    payload: {width, height}\r\n})\r\n\r\nexport const hideOverlay = () => ({\r\n    type: types.HIDE_OVERLAY\r\n})\r\n\r\nexport const showOverlay = () => ({\r\n    type: types.SHOW_OVERLAY\r\n})\r\n\r\nexport const setBaseImage = (img) => ({\r\n    type: types.SET_BASE_IMAGE,\r\n    payload: img\r\n})\r\n\r\nexport const setCanvas = (canvas) => ({\r\n    type: types.SET_CANVAS,\r\n    payload: canvas\r\n})","import React, {useState, useContext} from \"react\"\r\nimport {loadImageFromURL} from \"../utils/images.utils\"\r\n\r\n/*\r\n    select start image\r\n        - white background\r\n        - pre selected image\r\n        - custom image\r\n\r\n\r\n    resize canvas:\r\n\r\n*/\r\nimport \"../styles/components/canvas-overlay.scss\"\r\nimport \"../styles/components/image-overview-selector.scss\"\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {hideOverlay, setCanvasSize, setBaseImage} from \"../redux/canvas/canvas.actions\"\r\n\r\nconst MEME_TEMPLATES_PATH = process.env.PUBLIC_URL + \"/meme_templates/\"\r\nconst MEME_TEMPLATES_LIST = [\r\n    \"TwoButtons.png\",\r\n    \"ChangeMyMind.png\",\r\n    \"DistractedBoyfriend.png\",\r\n    \"LeftExitOffRamp.png\",\r\n    \"RunningAwayBalloon.png\",\r\n    \"BikeFall.png\",\r\n    \"OneDoesNotSimply.png\",\r\n    \"IsThisAPigeon.png\",\r\n    \"EpicHandshaker.png\",\r\n    \"ExpandingBrain.png\",\r\n    \"Mocking Spongebob.png\",\r\n    \"SadPabloEscobar.png\",\r\n    \"BatmanSlappingRobin.png\",\r\n    \"GrusPlan.png\",\r\n    \"Draw25.png\",\r\n    \"BuffDogeVS.png\",\r\n    \"BernieSupport.png\"\r\n]\r\n\r\nconst memeTemplatePaths = MEME_TEMPLATES_LIST.map((imgName) => MEME_TEMPLATES_PATH + imgName )\r\n\r\n\r\n\r\n\r\nconst CanvasStartOverlay = ({show}) => {\r\n    const dispatch = useDispatch();\r\n   \r\n\r\n    \r\n\r\n    const onImageClick = async (img) => {\r\n        // check if image is url or file url\r\n        const image = await loadImageFromURL(img)\r\n\r\n        console.log(\"loaded image\")\r\n        console.log(image)\r\n        console.log(image.width, image.height)\r\n        dispatch(setCanvasSize(image.width, image.height))\r\n        dispatch(setBaseImage(image))\r\n     \r\n    }\r\n\r\n    const setWhiteBackground = () => {\r\n        dispatch(setCanvasSize(600, 400))\r\n        dispatch(setBaseImage(null))\r\n    }\r\n\r\n    return (\r\n        <div className=\"canvas-overlay\" style={show ? null : {display: \"none\"}}>\r\n            <div className=\"canvas-overlay__choose-img\">\r\n                <ImageOverviewAndSelector images={memeTemplatePaths} onImageClick={onImageClick} />\r\n            </div>\r\n            <div className=\"canvas-overlay__without-img\">\r\n                <button className=\"button button--main\" onClick={setWhiteBackground}>Continue with white background</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ImageOverviewAndSelector = ({images, onImageClick}) => {\r\n\r\n\r\n    const onCustomImageSelect = async (e) => {\r\n        const imagePath = URL.createObjectURL(e.target.files[0]);\r\n\r\n        const files = e.target.files\r\n\r\n        if (FileReader && files && files.length) {\r\n            var fr = new FileReader();\r\n            fr.onload = function () {\r\n                onImageClick(fr.result);\r\n                \r\n            }\r\n            fr.readAsDataURL(files[0]);\r\n        }\r\n    \r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"image-overview-selector\">\r\n            <label className=\"image-overview-selector__label image-overview-selector__item\">\r\n                <input type=\"file\" className=\"image-overview-selector__input\" onChange={onCustomImageSelect}/>\r\n                Select custom image\r\n            </label>\r\n\r\n            {images.map((imgPath) => {\r\n                return (\r\n                <div className=\"image-overview-selector__item\" onClick={() => onImageClick(imgPath)}>\r\n                    <img src={imgPath}/>\r\n                </div>)\r\n            })} \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default CanvasStartOverlay","import types, {CANVAS_OBJECT_TYPES} from \"./canvasObjects.types\"\r\n\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nimport store from '../store';\r\n\r\nexport const createTextObject = (text) => ({\r\n    type: types.CREATE_CANVAS_OBJECT,\r\n    payload: {\r\n        // create uid\r\n        id: uuidv4(),\r\n        type: CANVAS_OBJECT_TYPES.TEXT,\r\n        x: store.getState().canvas.width / 2,\r\n        y: store.getState().canvas.height / 2,\r\n        rotation: 0,\r\n        text,\r\n        fill: \"#ffffff\",\r\n        stroke: \"#000000\",\r\n        strokeWidth: 2,\r\n        fontSize: 32,\r\n    }\r\n})\r\n\r\nexport const createImageObject = (image) => ({\r\n    type: types.CREATE_CANVAS_OBJECT,\r\n    payload: {\r\n        // create uid\r\n        id: uuidv4(),\r\n        type: CANVAS_OBJECT_TYPES.IMAGE,\r\n        x: store.getState().canvas.width / 2,\r\n        y: store.getState().canvas.height / 2,\r\n        width: image.width,\r\n        height: image.height,\r\n        rotation: 0,\r\n        src: image.src,\r\n        imageWidth: image.width,\r\n        imageHeight: image.height,\r\n    }\r\n})\r\n\r\n\r\nexport const updateObject = (id, data) => ({\r\n    type: types.UPDATE_CANVAS_OBJECT,\r\n    payload: {\r\n        id,\r\n        data,\r\n    }\r\n})\r\n\r\nexport const deleteObject = (id) => ({\r\n    type: types.DELETE_CANVAS_OBJECT,\r\n    payload: id\r\n})\r\n\r\nexport const setActiveObject = (objectID) => ({\r\n    type: types.SET_ACTIVE_OBJECT,\r\n    payload: objectID\r\n})\r\n\r\n\r\n","export const normalizeValues = (obj) => {\r\n    return Object.keys(obj).reduce((o, key) =>{\r\n        const value = obj[key];\r\n        if (typeof value === 'number') {\r\n            //it's a number\r\n            return {...o, [key]: Math.round(value * 10) / 10}\r\n        }else{\r\n            return {...o, [key]: value}\r\n        }\r\n        \r\n    },{})\r\n}\r\n\r\nexport const degreeToRadians = (angle) => {\r\n    return angle * (Math.PI / 180); \r\n}","import * as PIXI from \"pixi.js\"\r\n\r\n\r\n\r\nconst BASE_WIDTH = 1000;\r\nconst BASE_HEIGHT = 1000;\r\n\r\nclass CurrentObjectEdtior extends PIXI.Container{\r\n    constructor(app){\r\n        super();\r\n        this.app = app;\r\n        this.currentObject = null;\r\n        this.currentPixiElement = null;\r\n        this.zIndex = 10;\r\n        //this.graphic = this.createGraphic();\r\n         \r\n    }\r\n\r\n    createGraphic = () => {\r\n        var container = new PIXI.Container();\r\n        var graphics = new PIXI.Graphics();\r\n \r\n     \r\n \r\n        // set the line style to have a width of 5 and set the color to red\r\n        graphics.lineStyle(5, 0xFF0000);\r\n \r\n        // draw a rectangle\r\n        graphics.drawRect(0, 0, BASE_WIDTH, BASE_HEIGHT);\r\n        container.addChild(graphics)\r\n        graphics.zIndex = 10;\r\n        var texture = this.app.renderer.generateTexture(graphics);\r\n        var sprite = new PIXI.Sprite(texture);\r\n        sprite.zIndex = 10;\r\n        //circle.renderable = false;\r\n        return sprite;\r\n    }\r\n\r\n    getGraphic = () => {\r\n        return this.graphic;\r\n    }\r\n\r\n\r\n    setCurrentObject = (object, elements) => {\r\n        console.log(\"set current object\")\r\n        console.log(object)\r\n        this.currentObject = object;\r\n       \r\n\r\n        this.currentPixiElement = object ? elements[object.id] : null; \r\n    }\r\n\r\n\r\n    onRotationStart = (event) => {\r\n\r\n    }\r\n\r\n    onRotationMove = (event) => {\r\n\r\n    }\r\n\r\n    onRotationEnd = (event) => {\r\n        \r\n    }\r\n\r\n\r\n    renderUI(){\r\n        // update position \r\n        return;\r\n\r\n        this.removeChildren();\r\n        if(!this.currentObject) return\r\n\r\n        const el = this.currentPixiElement;\r\n\r\n        const graphic = new PIXI.Graphics();\r\n        graphic.lineStyle(3, 0xFF0000);\r\n        graphic.drawRect(el.x - 2 - el.width/2, el.y - 2 - el.height /2, el.width+4, el.height+4);\r\n       \r\n\r\n\r\n        const circleOne = new PIXI.Graphics()\r\n        circleOne.beginFill(0x000000);\r\n        circleOne.drawCircle(el.x - 2 - el.width/2, el.y - 2 - el.height /2,6)\r\n\r\n\r\n        const circleTwo = new PIXI.Graphics()\r\n        circleTwo.beginFill(0x000000);\r\n        circleTwo.drawCircle(el.x - 2 - 100, el.y - 2 - el.height /2,6)\r\n        circleTwo.\r\n        on('mousedown', this.onRotationStart)\r\n        .on('touchstart', this.onRotationStart)\r\n        .on('mouseup', this.onRotationEnd)\r\n        .on('mouseupoutside', this.onRotationEnd)\r\n        .on('touchend', this.onRotationEnd)\r\n        .on('touchendoutside', this.onRotationEnd)\r\n        .on('mousemove', this.onRotationMove)\r\n        .on('touchmove', this.onRotationMove)\r\n\r\n\r\n\r\n        this.addChild(graphic, circleOne,circleTwo)\r\n\r\n\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CurrentObjectEdtior;","\r\nimport React, {useContext, useEffect, useRef, useState} from \"react\"\r\n\r\n\r\nimport \"../styles/components/canvas.scss\"\r\nimport CanvasStartOverlay from \"./CanvasOverlay\";\r\nimport {app, setUpApp, render} from \"../pixijs/PixiApp\"\r\n\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {setCanvas} from \"../redux/canvas/canvas.actions\"\r\n\r\n\r\n\r\nconst Canvas = () => {\r\n    const canvasRef = useRef()\r\n    const dispatch = useDispatch()\r\n    const canvasSize = useSelector((state) => ({width: state.canvas.width, height: state.canvas.height}))\r\n    const showOverlay = useSelector((state) => state.canvas.showOverlay)\r\n    const baseImage = useSelector((state) => state.canvas.baseImage)\r\n    const canvasObjects = useSelector((state) => state.canvasObjects.objects)\r\n    const canvasObjectList = useSelector((state) => state.canvasObjects.objectList)\r\n\r\n\r\n    useEffect(() => {\r\n        // set up pixi js\r\n\r\n      \r\n        setUpApp(canvasRef.current, canvasSize)\r\n        dispatch(setCanvas(canvasRef.current))\r\n    },[])\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    console.log(canvasObjectList)\r\n    console.log(canvasObjects)\r\n\r\n    return (\r\n        <div className=\"canvas\">\r\n            <CanvasStartOverlay show={showOverlay} />\r\n            <div style={{width: canvasSize.width, height: canvasSize.height}} ref={canvasRef} ></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Canvas;","import React, {useState, useContext, useEffect} from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport {updateObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport{normalizeValues} from \"../utils/math.utils\"\r\n\r\n/*\r\n    attributes\r\n    x,y,rotation\r\n    text\r\n    fontSize\r\n    fill\r\n    stroke,\r\n    strokeWidth,\r\n    font?\r\n\r\n*/\r\n\r\nconst ElementEditorText = ({object}) => {\r\n   const dispatch = useDispatch()\r\n\r\n    const onChange = (e) => {\r\n\r\n        dispatch(updateObject(object.id, {\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const nObject = normalizeValues(object)\r\n    \r\n    return (\r\n        <div className=\"text-editor\">\r\n          <label className=\"text-editor__label-text\">text:</label>\r\n          <input type=\"text\" className=\"text-editor__input-text\" name=\"text\" value={nObject?.text} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-x\">x:</label>\r\n          <input type=\"number\" className=\"text-editor__input-x\" name=\"x\" value={nObject?.x} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-y\">y:</label>\r\n          <input type=\"number\" className=\"text-editor__input-y\" name=\"y\" value={nObject?.y} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-rotation\">rotation:</label>\r\n          <input type=\"number\" className=\"text-editor__input-rotation\" name=\"rotation\" value={nObject?.rotation} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-font-size\">size:</label>\r\n          <input type=\"number\" className=\"text-editor__input-font-size\" name=\"fontSize\" value={nObject?.fontSize} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-color\">color:</label>\r\n          <input type=\"color\" className=\"text-editor__input-color\" name=\"fill\" value={nObject?.fill} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-stroke-width\">strokeWidth:</label>\r\n          <input type=\"number\" className=\"text-editor__input-stroke-width\" name=\"strokeWidth\" value={nObject?.strokeWidth} onChange={onChange}/>\r\n           \r\n\r\n          <label className=\"text-editor__label-stroke\">stroke:</label>\r\n          <input type=\"color\" className=\"text-editor__input-stroke\" name=\"stroke\" value={nObject?.stroke} onChange={onChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ElementEditorText","import React, {useState, useContext, useEffect} from \"react\"\r\n\r\nimport { useDispatch } from \"react-redux\"\r\nimport {updateObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport {normalizeValues} from \"../utils/math.utils\"\r\n\r\n/*\r\n    attributes\r\n    x,y,rotation\r\n    width, height\r\n*/\r\n\r\n\r\n\r\n\r\nconst ElementEditorImage = ({object}) => {\r\n   const dispatch = useDispatch()\r\n\r\n    const onChange = (e) => {\r\n\r\n        dispatch(updateObject(object.id, {\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const nObject = normalizeValues(object)\r\n    \r\n    return (\r\n        <div className=\"image-editor\">\r\n            <label className=\"image-editor__label-x\">x:</label>\r\n            <input type=\"number\" className=\"image-editor__input-x\" name=\"x\" value={nObject?.x} onChange={onChange}/>\r\n\r\n            <label className=\"image-editor__label-y\">y:</label>\r\n            <input type=\"number\" className=\"image-editor__input-y\" name=\"y\" value={nObject?.y} onChange={onChange}/>\r\n\r\n            <label className=\"image-editor__label-rotation\">rotation:</label>\r\n            <input type=\"number\" className=\"image-editor__input-rotation\" name=\"rotation\" value={nObject?.rotation} onChange={onChange}/>\r\n\r\n            <label className=\"image-editor__label-width\">width:</label>\r\n            <input type=\"number\" className=\"image-editor__input-width\" name=\"width\" value={nObject?.width} onChange={onChange}/>\r\n\r\n            <label className=\"image-editor__label-height\">height:</label>\r\n            <input type=\"number\" className=\"image-editor__input-height\" name=\"height\" value={nObject?.height} onChange={onChange}/>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ElementEditorImage","import React, {useContext} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {CANVAS_OBJECT_TYPES} from \"../redux/canvasObjects/canvasObjects.types\"\r\n\r\nimport TextEditor from \"./ElementEditorText\"\r\nimport ImageEditor from \"./ElementEditorImage\"\r\n\r\nconst CurrentlySelectedElementUI = () => {\r\n    const activeObject = useSelector((state) => state.canvasObjects.activeObject)\r\n    const objects = useSelector((state) => state.canvasObjects.objects)\r\n\r\n\r\n    const renderActiveObjectEdtior = (activeObject) => {\r\n        const obj = objects[activeObject];\r\n        switch(obj?.type){\r\n            case CANVAS_OBJECT_TYPES.TEXT:\r\n                return <TextEditor object={obj} />\r\n            case CANVAS_OBJECT_TYPES.IMAGE:\r\n                return <ImageEditor object={obj} />\r\n            default: \r\n                return null;\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <div className=\"selected-ui\">\r\n\r\n        {activeObject &&\r\n            <div className=\"ui-component\">\r\n\r\n                \r\n                   {renderActiveObjectEdtior(activeObject)}\r\n          \r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentlySelectedElementUI","import React, {useState, useContext} from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {createTextObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\n\r\n\r\n\r\n\r\nconst TextCreator = () => {\r\n    const dispatch = useDispatch()\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const onTextChange = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const onClick = () => {\r\n        // add text element\r\n        dispatch(createTextObject(text))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ui-component text-creator\">\r\n            <div className=\"text-creator__input-container\">\r\n                <input type=\"text\" onChange={onTextChange} value={text} className=\"text-creator__input\"/> \r\n            </div>\r\n            <button className=\"button button--main mt--1\" onClick={onClick}>Add Text To Canvas</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextCreator","import React from \"react\"\r\nimport \"../styles/components/image-upload.scss\"\r\nconst ImageUpload = ({image, onChange}) => {\r\n\r\n    const src = image ? image.src : null;\r\n\r\n    return (\r\n        <label className=\"image-upload\">\r\n            <input type=\"file\" accept=\"image/*\"   name=\"image\" className=\"image-upload__input\" onChange={onChange}  />\r\n            <img className=\"image-upload__img\" src={src} />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default ImageUpload;","import React, {useContext, useEffect, useState} from \"react\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport { createImageObject } from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport {loadImage} from \"../utils/images.utils\"\r\n\r\n// render face and button to add to canvas\r\nconst FaceImageDisplay = ({img}) => {\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getImage(img);\r\n    }, [img])\r\n\r\n    const getImage = async (img) => {\r\n        const image = await loadImage(img)\r\n        setImage(image)\r\n    }\r\n\r\n\r\n    const addImageToCanvas = () =>{\r\n        dispatch(createImageObject(image))\r\n    }\r\n\r\n    return (\r\n        <div className=\"face-image\" onClick={addImageToCanvas}>\r\n            <div className=\"face-image__img-container\">\r\n                <img src={image?.src} className=\"face-image__img\"/>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceImageDisplay\r\n","import React from \"react\"\r\n\r\nimport \"../styles/components/loading-overlay.scss\"\r\n\r\nconst LoadingOverlay = ({isLoading}) => (\r\n    <div className={`loading-overlay ${isLoading && \"loading-overlay--active\"}`}>\r\n        <div class=\"loading-overlay--spinner\"><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default LoadingOverlay;","import React, {useEffect, useRef, useState} from \"react\"\r\nimport * as tfjs from '@tensorflow/tfjs';\r\nimport * as bodyPix from \"@tensorflow-models/body-pix\"\r\nimport * as blazeface from \"@tensorflow-models/blazeface\"\r\n\r\n\r\nimport * as tfjsWasm from '@tensorflow/tfjs-backend-wasm';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport '@tensorflow/tfjs-backend-cpu';\r\n\r\nimport FaceImageDisplay from \"./FaceImageDisplay\";\r\n\r\nimport {canvasToBlob} from \"../utils/images.utils\"\r\nimport \"../styles/components/face-extractor.scss\"\r\n\r\nimport LoadingOverlay from \"../components/LoadingOverlay\"\r\n\r\n\r\n\r\nlet blazefaceModel = null;\r\nlet bodyPixModel = null;\r\n\r\n\r\nconst FaceExtractor = ({image}) => {\r\n    const canvasRef = useRef()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [faceImages, setFaceImages] = useState([])\r\n\r\n    const loadModels = async () => {\r\n        console.log(\"loading models...\")\r\n        if(!blazefaceModel) blazefaceModel = await blazeface.load();\r\n        if(!bodyPixModel) bodyPixModel = await bodyPix.load({         \r\n            architecture: 'MobileNetV1',\r\n            outputStride: 8,\r\n            quantBytes: 4\r\n        });\r\n    }\r\n\r\n\r\n    const startFaceExtraction = async () => {\r\n        setIsLoading(true)\r\n        await loadModels(image);\r\n        const faces = await extractFaces(image)\r\n        setFaceImages(faces)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const extractFaces = async (img) => {\r\n        console.log(\"extract Faces\")\r\n        const predictedFaceDimensions = await predictFaces(img)\r\n\r\n        const faceImages = []\r\n        for(let i = 0; i < predictedFaceDimensions.length; i++){\r\n\r\n            console.log(\"face \" + i)\r\n            // crop image\r\n            await cropFace(canvasRef.current, img, predictedFaceDimensions[i])\r\n            \r\n            // remove background\r\n            await segmentFace(canvasRef.current)\r\n\r\n            const faceImage = await canvasToBlob(canvasRef.current)\r\n            faceImage.name =  `${image.name.split(\".\")[0]}-f-${i}.png`;\r\n            faceImage.width =  canvasRef.current.width;\r\n            faceImages.height =   canvasRef.current.height;\r\n            faceImages.push(faceImage)\r\n        }\r\n\r\n        return faceImages;\r\n    }\r\n\r\n    const cropFace = async (canvas, img, predictions) => {\r\n        canvas.width = predictions.width;\r\n        canvas.height = predictions.height;\r\n\r\n        const x = predictions.x ;\r\n        const y = predictions.y ;\r\n        const width = predictions.width;\r\n        const height = predictions.height;\r\n        \r\n        const ctx = canvas.getContext(\"2d\");   \r\n        ctx.drawImage(img, x,y , width, height, 0, 0, canvas.width,  canvas.height)\r\n    }\r\n\r\n    const predictFaces = async (image) => {\r\n        const returnTensors = false; // Pass in `true` to get tensors back, rather than values.\r\n        const predictions = await blazefaceModel.estimateFaces(image, returnTensors);\r\n\r\n        const predictionDimensions = []\r\n        if (predictions.length > 0) {\r\n            for (let i = 0; i < predictions.length; i++) {\r\n                const start = predictions[i].topLeft;\r\n                const end = predictions[i].bottomRight;\r\n                const size = [end[0] - start[0], end[1] - start[1]];\r\n\r\n                const startY = Math.max(start[1] - (size[1] / 1.3), 0)\r\n                const startX = Math.max(start[0] - (size[0] / 4), 0)\r\n                    \r\n                predictionDimensions.push({\r\n                    x: startX,\r\n                    y: startY,\r\n                    width:size[0] * 1.5,\r\n                    height:size[1] * 1.7,\r\n                })\r\n            }\r\n        }\r\n        return predictionDimensions;\r\n    }\r\n\r\n\r\n\r\n    const segmentFace = async (canvas) => {\r\n        const { data:map } = await bodyPixModel.segmentPerson(canvas);\r\n        const ctx = canvas.getContext(\"2d\")\r\n        const { data:imgData } = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n       \r\n        const newImg = ctx.createImageData(canvas.width, canvas.height);\r\n        const newImgData = newImg.data;\r\n\r\n        for(let i=0; i<map.length; i++) {\r\n            //The data array stores four values for each pixel\r\n            const [r, g, b, a] = [imgData[i*4], imgData[i*4+1], imgData[i*4+2], imgData[i*4+3]];\r\n            [\r\n              newImgData[i*4],\r\n              newImgData[i*4+1],\r\n              newImgData[i*4+2],\r\n              newImgData[i*4+3]\r\n            ] = !map[i] ? [255, 255, 255, 0] : [r, g, b, a];\r\n        }\r\n\r\n\r\n        ctx.putImageData(newImg, 0, 0);\r\n  \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"face-extractor\">\r\n            <button  onClick={startFaceExtraction} className=\"button button--main\" disabled={image == null}>Extract Faces</button>\r\n\r\n            <div className=\"face-extractor__display\">\r\n                <LoadingOverlay isLoading={isLoading}></LoadingOverlay>\r\n                    <div className=\"face-extractor__list\">\r\n                        {faceImages.map((faceImage, idx) => {\r\n                            return <FaceImageDisplay img={faceImage} key={`faceimage-${idx}`}/>\r\n                        })}\r\n                    </div>\r\n                \r\n            </div>\r\n           \r\n            <canvas ref={canvasRef} className=\"face-extractor__canvas\"></canvas>\r\n        </div>\r\n    )\r\n}   \r\n\r\n\r\n\r\nexport default FaceExtractor;","import React, {useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {createImageObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport ImageUpload from \"./ImageUpload\";\r\nimport FaceExtractor from \"./FaceExtractor\";\r\nimport {loadImage} from \"../utils/images.utils\"\r\n\r\n\r\nconst ImageCreator = () => {\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(null)\r\n    const [isLoadingImage, setIsLoadingImage] = useState(null)\r\n\r\n\r\n    const onImageChange = async (e) => {\r\n        console.log(\"load image\")\r\n        setIsLoadingImage(true)\r\n        const loadedImage = await loadImage(e.target.files[0])\r\n        setImage(loadedImage)\r\n        setIsLoadingImage(false)\r\n    }\r\n\r\n    const addImageToCanvas = () => {\r\n        dispatch(createImageObject(image))\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui-component\">\r\n            <ImageUpload image={image} onChange={onImageChange} />\r\n            <button className=\"button button--main mt--2\" onClick={addImageToCanvas} disabled={image == null}>Add Image To Canvas</button>\r\n            \r\n            <FaceExtractor image={image} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageCreator","import React, {useState} from \"react\"\r\nimport TextCreator from \"./ElementCreatorText\"\r\nimport ImageCreator from \"./ElementCreatorImage\"\r\nimport {app} from \"../pixijs/PixiApp\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\n\r\n\r\nconst TAB = {\r\n    IMAGE: \"Image\",\r\n    TEXT: \"text\",\r\n    GRAPHIC: \"graphic\"\r\n}\r\n\r\n\r\nconst CreateElementUI = () => {\r\n    const canvasRef = useSelector((state) => state.canvas.canvasRef)\r\n    const [activeTab, setActiveTab] = useState(TAB.TEXT)\r\n\r\n\r\n    const renderTab = () => {\r\n        switch(activeTab){\r\n\r\n            case TAB.IMAGE:\r\n                return <ImageCreator />\r\n            case TAB.TEXT: \r\n                return <TextCreator />\r\n            default:\r\n                <TextCreator />\r\n        }\r\n    }\r\n\r\n    console.log(\"active tab\")\r\n    console.log(activeTab)\r\n\r\n    const onDownloadClick = () => {\r\n        if(app){\r\n            console.log(app.view)\r\n\r\n           var link = document.createElement('a');\r\n            link.download = 'meme.png';\r\n           \r\n            link.href = app.view.toDataURL(\"image/png\")\r\n            link.click();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-ui\">\r\n\r\n            <div>\r\n                <button className=\"button button--ui button--download\" onClick={onDownloadClick}>Download</button>\r\n            </div>\r\n            <div className=\"create-selector\">\r\n                \r\n                <button className={`button button--ui ${activeTab == TAB.TEXT && \"button--ui--active\"}`} onClick={() => setActiveTab(TAB.TEXT)}>\r\n                    Text\r\n                </button>\r\n\r\n                <button className={`button button--ui ${activeTab == TAB.IMAGE && \"button--ui--active\"}`} onClick={() => setActiveTab(TAB.IMAGE)}>\r\n                    Image\r\n                </button>\r\n\r\n              \r\n\r\n             \r\n            </div>\r\n\r\n\r\n            <div>\r\n                {renderTab()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateElementUI","import React, {useContext} from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport {setActiveObject, deleteObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport {showOverlay} from \"../redux/canvas/canvas.actions\"\r\nimport \"../styles/components/canvas-object-label.scss\"\r\nimport \"../styles/components/base-image-display.scss\"\r\n\r\nconst CanvasElementOverviewUI = () => {\r\n   \r\n    const baseImage = useSelector((state) => state.canvas.baseImage)\r\n    const activeObject = useSelector((state) => state.canvasObjects.activeObject)\r\n    const canvasObjects = useSelector((state) => state.canvasObjects.objects)\r\n    const canvasObjectList = useSelector((state) => state.canvasObjects.objectList) \r\n\r\n\r\n    return (\r\n        <div className=\"overview-ui\">\r\n            <BaseImageDisplay />\r\n            <div className=\"object-labels\"> \r\n                {canvasObjectList.length == 0 && (<div>Canvas Element Overview</div>)}\r\n                {canvasObjectList.map((objectID) => {\r\n                    const obj = canvasObjects[objectID];\r\n                    return <CanvasObjectLabel object={obj} active={activeObject == obj.id}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// change, size of canvas\r\nconst BaseImageDisplay = () => {\r\n    const dispatch = useDispatch();\r\n    const canvasDimensions = useSelector((state) => ({width: state.canvas.width, height: state.canvas.height}))\r\n    const baseImage = useSelector(state => state.canvas.baseImage)\r\n\r\n\r\n    let name = \"None\";\r\n    if(baseImage){\r\n        const splitPath = baseImage.src.split(\"/\");\r\n        name = splitPath[splitPath.length-1]\r\n    }\r\n\r\n    const openBaseImageOverlay = () => {\r\n        dispatch(showOverlay())\r\n    }\r\n   \r\n    return (\r\n        <div className=\"base-image-display\"> \r\n            <div className=\"base-image-display__img-container\">\r\n\r\n                {baseImage ? \r\n                <img className=\"base-image-display__img\" src={baseImage.src}/>    \r\n                :\r\n                null\r\n                }\r\n                \r\n            </div>\r\n            <div className=\"base-image-display__info\">\r\n                <div className=\"base-iamge-display__info-text\">BaseImage: {name}</div>\r\n                <div>Dimensions: {canvasDimensions.width} x {canvasDimensions.height}</div>\r\n            </div>\r\n            <button className=\"button button--main mt--1\" onClick={openBaseImageOverlay}>Change Base Image</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CanvasObjectLabel = ({object, active}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const activeObject = () => {\r\n        if(active == false){\r\n            dispatch(setActiveObject(object.id))\r\n        }\r\n    }\r\n\r\n    const dispatchDeleteObject = () => {\r\n        // \r\n        dispatch(deleteObject(object.id))\r\n    }\r\n\r\n    return (\r\n        <div className={`object-label ${active && \"object-label--active\"}`} onClick={activeObject}>\r\n\r\n            <div className=\"object-label__info\">\r\n                <div className=\"object-label__type\">\r\n                    [{object.type}]\r\n                </div>\r\n\r\n                <div className=\"object-label__content\">\r\n                    {object.text}\r\n                </div>\r\n\r\n             \r\n            </div>\r\n\r\n            <button className=\"object-label__delete\" onClick={dispatchDeleteObject}>\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasElementOverviewUI","import React, {useRef, useEffect} from \"react\"\n\n\nimport Canvas from \"./components/Canvas\";\nimport CurrentlySelectedElementUI from \"./components/UIPanelCurrentElement\";\nimport CreateElementUI from \"./components/UIPanelCreatElement\";\nimport UIPanelElementOverview from \"./components/UIPanelElementOverview\";\n\n\nimport \"./styles/main.scss\";\n\nfunction App() {\n\n  \n  return (\n      <div className=\"App\">\n        <Canvas />\n        <CurrentlySelectedElementUI />\n        <CreateElementUI />\n        <UIPanelElementOverview />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from \"./redux/store\"\nimport {Provider} from \"react-redux\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}