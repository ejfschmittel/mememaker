{"version":3,"sources":["pixijs/PixiApp.js","redux/canvasObjects/canvasObjects.types.js","redux/canvasObjects/canvasObjects.reducer.js","redux/canvas/canvas.types.js","redux/canvas/canvas.reducer.js","redux/root-reducer.js","redux/store.js","redux/canvasObjects/canvasOjbects.actions.js","utils/images.utils.js","redux/canvas/canvas.actions.js","components/CanvasOverlay.jsx","utils/math.utils.js","components/Canvas.jsx","components/Viewport.jsx","components/ElementEditorText.jsx","components/ElementEditorImage.jsx","components/UIPanelCurrentElement.jsx","components/Editor.js","components/ElementCreatorText.jsx","components/ImageUpload.jsx","components/FaceImageDisplay.jsx","components/LoadingOverlay.jsx","components/FaceExtractor.jsx","components/ElementCreatorImage.jsx","components/UIPanelCreatElement.jsx","components/UIPanelElementOverview.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","CANVAS_OBJECT_TYPES","defaultState","objectList","objects","activeObject","reducer","state","action","type","types","canvasObject","payload","id","console","log","data","filter","deleted","baseImage","width","height","showOverlay","canvasRef","rootReducer","combineReducers","canvasObjects","canvas","store","createStore","createImageObject","image","uuidv4","x","y","rotation","src","imageWidth","imageHeight","updateObject","setActiveObject","objectID","loadImage","a","Promise","resolve","reject","img","Image","onload","onerror","URL","createObjectURL","loadImageFromURL","imageURL","canvasToBlob","toBlob","blob","setBaseImage","memeTemplatePaths","map","imgName","process","ImageOverviewAndSelector","images","onImageClick","className","imgPath","onClick","CanvasStartOverlay","show","dispatch","useDispatch","style","display","normalizeValues","obj","Object","keys","reduce","o","key","value","Math","round","elements","displayBaseImage","createDisplayObject","object","displayObject","PIXI","from","text","fill","string2hex","stroke","strokeThickness","strokeWidth","createTextObject","interactive","buttonMode","anchor","set","zIndex","onDragMove","event","sprite","currentTarget","dragging","newPosition","getLocalPosition","parent","onDragEnd","movable","alpha","onDragStart","on","stage","addChild","updateDisplayObject","position","PI","scaleX","scaleY","scale","updateImageDisplayObject","fontSize","parseInt","updateTextDisplayObject","renderObject","resizeStage","view","renderer","resize","setCanvasDimensions","subscribe","getState","imgSprite","removeChild","renderBaseImage","element","removeObject","forEach","render","Canvas","PixiComponent","create","props","viewport","PixiViewport","screenWidth","screenHeight","worldWidth","worldHeight","ticker","interaction","plugins","drag","pressDrag","pinch","wheel","clampZoom","useRef","canvasSize","useSelector","canvasObjectList","useEffect","container","dimensions","resizeTo","backgroundColor","resolution","preserveDrawingBuffer","appendChild","sortableChildren","setUpApp","current","ref","ElementEditorText","onChange","e","target","name","nObject","ElementEditorImage","CurrentlySelectedElementUI","renderActiveObjectEdtior","EditorRow","children","EditorField","EditorInput","Editor","TextCreator","useState","setText","ImageUpload","accept","FaceImageDisplay","setImage","getImage","LoadingOverlay","isLoading","class","blazefaceModel","bodyPixModel","FaceExtractor","setIsLoading","faceImages","setFaceImages","loadModels","blazeface","bodyPix","architecture","outputStride","quantBytes","startFaceExtraction","extractFaces","faces","predictFaces","predictedFaceDimensions","i","length","cropFace","segmentFace","faceImage","split","push","predictions","getContext","drawImage","estimateFaces","predictionDimensions","start","topLeft","end","bottomRight","size","startY","max","startX","segmentPerson","ctx","getImageData","imgData","newImg","createImageData","newImgData","r","g","b","putImageData","idx","ImageCreator","onImageChange","files","loadedImage","TAB","CreateElementUI","activeTab","setActiveTab","link","document","createElement","download","href","toDataURL","click","renderTab","BaseImageDisplay","canvasDimensions","splitPath","CanvasObjectLabel","active","CanvasElementOverviewUI","App","UIPanelElementOverview","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca69ce81.chunk.js","sourcesContent":["import * as PIXI from \"pixi.js\"\r\nimport {CANVAS_OBJECT_TYPES} from \"../redux/canvasObjects/canvasObjects.types\"\r\nimport store from \"../redux/store\"\r\nimport {updateObject, setActiveObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport {degreeToRadians} from \"../utils/math.utils\"\r\n\r\nexport let app;\r\n\r\nexport const setUpApp = (container, dimensions) => {\r\n    if(app) return null; \r\n\r\n    app = new PIXI.Application({\r\n        resizeTo: container, backgroundColor: 0x1099bb, resolution: 1, preserveDrawingBuffer: true\r\n    });\r\n\r\n\r\n    \r\n    container.appendChild(app.view)  \r\n    app.stage.sortableChildren = true; \r\n\r\n\r\n}\r\n\r\nlet elements = {}\r\nlet displayBaseImage = null;\r\n\r\nconst displayObjectExists = (id) => {\r\n    return id in elements\r\n}\r\n\r\nconst setCanvasDimensions = (width, height) => {\r\n    app.view.width = width;\r\n    app.view.height = height;\r\n    app.renderer.resize(width, height);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst createTextObject = (object) => {\r\n    const text = new PIXI.Text(object.text, new PIXI.TextStyle({\r\n        fill: object.fill ? PIXI.utils.string2hex(object.fill) : 0x000000,                     \r\n        stroke: object.stroke ? PIXI.utils.string2hex(object.stroke) : 0x000000,                                      \r\n        strokeThickness: object?.strokeWidth || 0,\r\n    }))\r\n    return text;\r\n}\r\n\r\nconst createImageObject = (object) => {\r\n    const image = PIXI.Sprite.from(object.src); \r\n    return image;\r\n}\r\n\r\nconst createDisplayObject = (object) => {\r\n\r\n    let displayObject = null;\r\n    switch(object.type){\r\n        case CANVAS_OBJECT_TYPES.IMAGE:\r\n            displayObject = createImageObject(object);\r\n            break;\r\n        case CANVAS_OBJECT_TYPES.TEXT:\r\n            displayObject = createTextObject(object);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n    if(displayObject == null) return;\r\n\r\n\r\n    displayObject.interactive = true;\r\n    displayObject.buttonMode = true;\r\n\r\n    displayObject.anchor.set(.5,.5)\r\n    displayObject.zIndex = 5;\r\n\r\n    const onDragMove = (event) => {\r\n        const sprite = event.currentTarget \r\n        if (sprite.dragging) {\r\n            const newPosition = sprite?.data.getLocalPosition(sprite.parent);\r\n            store.dispatch(updateObject(object.id,{x: newPosition.x, y: newPosition.y}))\r\n        }\r\n    }\r\n\r\n    const onDragEnd = (event) => {\r\n        const movable = event.currentTarget\r\n        movable.dragging = false;\r\n        movable.alpha = 1;\r\n    }\r\n\r\n    const onDragStart = (event) => {\r\n\r\n        const movable = event.currentTarget\r\n        movable.data = event.data;\r\n        movable.dragging = true;\r\n        movable.alpha = .5;\r\n        store.dispatch(setActiveObject(object.id))\r\n       \r\n    }\r\n\r\n    displayObject    // events for drag start\r\n    .on('mousedown', onDragStart)\r\n    .on('touchstart', onDragStart)\r\n    // events for drag end\r\n    .on('mouseup', onDragEnd)\r\n    .on('mouseupoutside', onDragEnd)\r\n    .on('touchend', onDragEnd)\r\n    .on('touchendoutside', onDragEnd)\r\n    // events for drag move\r\n    .on('mousemove', onDragMove)\r\n    .on('touchmove', onDragMove);\r\n    elements[object.id] = displayObject;\r\n    app.stage.addChild(displayObject)\r\n}\r\n\r\nconst updateImageDisplayObject = (object) => {\r\n    const displayObject = elements[object.id];\r\n    const scaleX = object.width/object.imageWidth || 1;\r\n    const scaleY = object.height/object.imageHeight || 1;\r\n    displayObject.scale.set(scaleX, scaleY)\r\n}\r\n\r\nconst updateTextDisplayObject = (object) => {\r\n    console.log(object)\r\n    const displayObject = elements[object.id];\r\n    displayObject.style = new PIXI.TextStyle({\r\n        fontSize: parseInt(object?.fontSize) || 32,\r\n        fill: object.fill ? PIXI.utils.string2hex(object.fill) : 0x000000,\r\n        strokeThickness: object?.strokeWidth || 0,\r\n        stroke: object.stroke ? PIXI.utils.string2hex(object.stroke) : 0x000000,\r\n    })\r\n    displayObject.text = object.text;\r\n}\r\n\r\nconst updateDisplayObject = (object) => {\r\n    const displayObject = elements[object.id];\r\n    // general updates\r\n    displayObject.position.set(object.x, object.y)\r\n    displayObject.rotation = object?.rotation ?  degreeToRadians(object.rotation) : 0\r\n\r\n    // specifci updates\r\n\r\n    switch(object.type){\r\n        case CANVAS_OBJECT_TYPES.IMAGE:\r\n            updateImageDisplayObject(object)\r\n            break;\r\n        case CANVAS_OBJECT_TYPES.TEXT:\r\n            updateTextDisplayObject(object)\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst renderObject = (object) => {\r\n    if(displayObjectExists(object.id)){\r\n        // update object\r\n        updateDisplayObject(object)\r\n    }else{\r\n        // create object\r\n        createDisplayObject(object)\r\n\r\n    }\r\n\r\n\r\n   \r\n}\r\n\r\n\r\nconst renderBaseImage = (baseImage) => {\r\n\r\n    // picture changed\r\n    // picture added\r\n    // picture removed\r\n    \r\n    if(baseImage && displayBaseImage == null){\r\n        const imgSprite = PIXI.Sprite.from(baseImage.src);\r\n        displayBaseImage = imgSprite;\r\n        app.stage.addChild(imgSprite);\r\n    }else if(baseImage == null && displayBaseImage){\r\n        // remove base image\r\n        app.stage.removeChild(baseImage);\r\n        displayBaseImage = null;\r\n    }else if(baseImage && displayBaseImage){\r\n        if(baseImage.src !== displayBaseImage.src){\r\n            // remove old and add new\r\n            app.stage.removeChild(displayBaseImage)\r\n            const imgSprite = PIXI.Sprite.from(baseImage.src);\r\n            displayBaseImage = imgSprite;\r\n            app.stage.addChild(imgSprite);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nconst resizeStage = ({width, height}) => {\r\n    setCanvasDimensions(width, height)\r\n}\r\n\r\n// remove object\r\n\r\n\r\nconst removeObject = (id) => {\r\n    const element = elements[id]\r\n    app.stage.removeChild(element)\r\n    elements[id] = null\r\n}\r\n\r\nexport const render = () => {\r\n    console.log(\"rerender\")\r\n   const state = store.getState();\r\n   console.log(state)\r\n   \r\n   // render base image\r\n   resizeStage(state.canvas)\r\n   renderBaseImage(state.canvas.baseImage)\r\n   \r\n   const objectList = state.canvasObjects.objectList;\r\n   const objects = state.canvasObjects.objects;\r\n\r\n   // clear deleted objects = \r\n   Object.keys(objects).map((id) => {\r\n    const object = objects[id];\r\n    if(object.deleted) removeObject(id)\r\n   })\r\n \r\n   objectList.forEach((objectID) => {\r\n      \r\n        // create or update\r\n        const object = objects[objectID];\r\n\r\n        // render object\r\n        renderObject(object)\r\n\r\n   })\r\n   app.render(app.stage);\r\n}\r\n\r\nstore.subscribe(render)\r\n\r\n\r\n\r\n\r\n","\r\nexport default {\r\n    DELETE_CANVAS_OBJECT: \"DELETE_CANVAS_OBJECT\",\r\n    CREATE_CANVAS_OBJECT: \"CREATE_CANVAS_OBJECT\",\r\n    UPDATE_CANVAS_OBJECT: \"UPDATE_CANVAS_OBJECT\",\r\n    SET_ACTIVE_OBJECT: \"SET_ACTIVE_OBJECT\"\r\n}\r\n\r\nexport const CANVAS_OBJECT_TYPES = {\r\n    TEXT: \"TEXT\",\r\n    IMAGE: \"IMAGE\"\r\n}","\r\nimport types from \"./canvasObjects.types\"\r\n\r\nconst defaultState = {\r\n    objectList: [],\r\n    objects: {},\r\n    activeObject: null,\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case types.CREATE_CANVAS_OBJECT: \r\n            const canvasObject = action.payload\r\n            const objectList = [...state.objectList, canvasObject.id]\r\n            const objects = {...state.objects, [canvasObject.id]: canvasObject}\r\n            return {objectList,objects, activeObject: canvasObject.id};\r\n        case types.UPDATE_CANVAS_OBJECT:    \r\n            console.log(\"update canvas object\")\r\n            console.log(action)\r\n            return {...state, objects: {...state.objects, [action.payload.id]: {\r\n                ...state.objects[action.payload.id],\r\n                ...action.payload.data\r\n            }}};\r\n\r\n        \r\n        case types.DELETE_CANVAS_OBJECT: \r\n            // remove from object list\r\n            // remove from objects\r\n            // remove currrent\r\n            return {\r\n                ...state, \r\n                activeObject: state.activeObject == action.payload ? null : state.activeObject,\r\n                objectList: state.objectList.filter((id) => id !== action.payload),\r\n                objects: {\r\n                    ...state.objects,\r\n                    [action.payload]: { deleted:true }\r\n                }\r\n            };\r\n\r\n        case types.SET_ACTIVE_OBJECT:\r\n            return {...state, activeObject: action.payload}\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","export default {\r\n    SET_CANVAS_SIZE: \"SET_CANVAS_SIZE\",\r\n    REMOVE_BASE_IMAGE: \"REMOVE_BASE_IMAGE\",\r\n    SET_BASE_IMAGE: \"SET_BASE_IMAGE\",\r\n    HIDE_OVERLAY: \"HIDE_OVERLAY\",\r\n    SHOW_OVERLAY: \"SHOW_OVERLAY\",\r\n    SET_CANVAS: \"SET_CANVAS\",\r\n\r\n}","\r\nimport types from \"./canvas.types\"\r\n\r\nconst defaultState = {\r\n    baseImage: null,\r\n    width: 600,\r\n    height: 400,\r\n    showOverlay: true,\r\n    canvasRef: null,\r\n}\r\n\r\n\r\nconst reducer = (state = defaultState, action) => {\r\n    switch(action.type){\r\n\r\n        case types.SET_CANVAS_SIZE: \r\n            return {...state, width: action.payload.width, height: action.payload.height};\r\n        case types.SET_BASE_IMAGE:\r\n            return {...state, showOverlay: false, baseImage: action.payload}\r\n        case types.REMOVE_BASE_IMAGE:\r\n            return {...state}\r\n\r\n        case types.SET_CANVAS:\r\n            return {...state, canvasRef: action.payload}\r\n\r\n        case types.HIDE_OVERLAY:\r\n            return {...state, showOverlay: false}\r\n        case types.SHOW_OVERLAY:\r\n            return {...state, showOverlay: true}\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\n\r\nimport canvasObjects from \"./canvasObjects/canvasObjects.reducer\"\r\nimport canvas from \"./canvas/canvas.reducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    canvasObjects,\r\n    canvas,\r\n})\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\nimport rootReducer from \"./root-reducer\"\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store;","import types, {CANVAS_OBJECT_TYPES} from \"./canvasObjects.types\"\r\n\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nexport const createTextObject = (text) => ({\r\n    type: types.CREATE_CANVAS_OBJECT,\r\n    payload: {\r\n        // create uid\r\n        id: uuidv4(),\r\n        type: CANVAS_OBJECT_TYPES.TEXT,\r\n        x: 0,\r\n        y: 0,\r\n        rotation: 0,\r\n        text,\r\n        fill: \"#ffffff\",\r\n        stroke: \"#000000\",\r\n        strokeWidth: 2,\r\n        fontSize: 32,\r\n    }\r\n})\r\n\r\nexport const createImageObject = (image) => ({\r\n    type: types.CREATE_CANVAS_OBJECT,\r\n    payload: {\r\n        // create uid\r\n        id: uuidv4(),\r\n        type: CANVAS_OBJECT_TYPES.IMAGE,\r\n        x: 0,\r\n        y: 0,\r\n        width: image.width,\r\n        height: image.height,\r\n        rotation: 0,\r\n        src: image.src,\r\n        imageWidth: image.width,\r\n        imageHeight: image.height,\r\n    }\r\n})\r\n\r\n\r\nexport const updateObject = (id, data) => ({\r\n    type: types.UPDATE_CANVAS_OBJECT,\r\n    payload: {\r\n        id,\r\n        data,\r\n    }\r\n})\r\n\r\nexport const deleteObject = (id) => ({\r\n    type: types.DELETE_CANVAS_OBJECT,\r\n    payload: id\r\n})\r\n\r\nexport const setActiveObject = (objectID) => ({\r\n    type: types.SET_ACTIVE_OBJECT,\r\n    payload: objectID\r\n})\r\n\r\n\r\n","export const loadImage = async (image) => {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        img.onload = () => resolve(img)\r\n        img.onerror = reject\r\n        img.src  =  URL.createObjectURL(image)    \r\n    })\r\n}\r\n\r\nexport const loadImageFromURL = async (imageURL) => {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        img.onload = () => resolve(img)\r\n        img.onerror = reject\r\n        img.src  =  imageURL  \r\n    })\r\n}\r\n\r\nexport const canvasToBlob = async (canvas) => {\r\n    return new Promise((resolve, reject) => {\r\n        canvas.toBlob((blob) => {\r\n            resolve(blob)\r\n        })\r\n    })\r\n}\r\n","import types from \"./canvas.types\"\r\n\r\nexport const setCanvasSize = (width, height) => ({\r\n    type: types.SET_CANVAS_SIZE,\r\n    payload: {width, height}\r\n})\r\n\r\nexport const hideOverlay = () => ({\r\n    type: types.HIDE_OVERLAY\r\n})\r\n\r\nexport const showOverlay = () => ({\r\n    type: types.SHOW_OVERLAY\r\n})\r\n\r\nexport const setBaseImage = (img) => ({\r\n    type: types.SET_BASE_IMAGE,\r\n    payload: img\r\n})\r\n\r\nexport const setCanvas = (canvas) => ({\r\n    type: types.SET_CANVAS,\r\n    payload: canvas\r\n})","import React, {useState, useContext} from \"react\"\r\nimport {loadImageFromURL} from \"../utils/images.utils\"\r\nimport CanvasObjectContext from \"../contexts/CanvasObjectContext\";\r\n\r\n/*\r\n    select start image\r\n        - white background\r\n        - pre selected image\r\n        - custom image\r\n\r\n\r\n    resize canvas:\r\n\r\n*/\r\nimport \"../styles/components/canvas-overlay.scss\"\r\nimport \"../styles/components/image-overview-selector.scss\"\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {hideOverlay, setCanvasSize, setBaseImage} from \"../redux/canvas/canvas.actions\"\r\n\r\nconst MEME_TEMPLATES_PATH = process.env.PUBLIC_URL + \"/meme_templates/\"\r\nconst MEME_TEMPLATES_LIST = [\r\n    \"TwoButtons.png\",\r\n    \"ChangeMyMind.png\",\r\n    \"DistractedBoyfriend.png\",\r\n    \"LeftExitOffRamp.png\",\r\n    \"RunningAwayBalloon.png\",\r\n    \"BikeFall.png\",\r\n    \"OneDoesNotSimply.png\",\r\n    \"IsThisAPigeon.png\",\r\n    \"EpicHandshaker.png\",\r\n    \"ExpandingBrain.png\",\r\n    \"Mocking Spongebob.png\",\r\n    \"SadPabloEscobar.png\",\r\n    \"BatmanSlappingRobin.png\",\r\n    \"GrusPlan.png\",\r\n    \"Draw25.png\",\r\n    \"BuffDogeVS.png\",\r\n    \"BernieSupport.png\"\r\n]\r\n\r\nconst memeTemplatePaths = MEME_TEMPLATES_LIST.map((imgName) => MEME_TEMPLATES_PATH + imgName )\r\n\r\n\r\n\r\n\r\nconst CanvasStartOverlay = ({show}) => {\r\n    const dispatch = useDispatch();\r\n   \r\n\r\n    \r\n\r\n    const onImageClick = async (img) => {\r\n        // check if image is url or file url\r\n        const image = await loadImageFromURL(img)\r\n\r\n        dispatch(setCanvasSize(image.width, image.height))\r\n        dispatch(setBaseImage(image))\r\n     \r\n    }\r\n\r\n    return (\r\n        <div className=\"canvas-overlay\" style={show ? null : {display: \"none\"}}>\r\n            <div className=\"canvas-overlay__choose-img\">\r\n                <ImageOverviewAndSelector images={memeTemplatePaths} onImageClick={onImageClick} />\r\n            </div>\r\n            <div className=\"canvas-overlay__without-img\">\r\n                <button className=\"button button--main\">Continue with white background</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ImageOverviewAndSelector = ({images, onImageClick}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"image-overview-selector\">\r\n            <label className=\"image-overview-selector__label image-overview-selector__item\">\r\n                <input type=\"file\" className=\"image-overview-selector__input\" />\r\n                Select custom image\r\n            </label>\r\n\r\n            {images.map((imgPath) => {\r\n                return (\r\n                <div className=\"image-overview-selector__item\" onClick={() => onImageClick(imgPath)}>\r\n                    <img src={imgPath}/>\r\n                </div>)\r\n            })} \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default CanvasStartOverlay","export const normalizeValues = (obj) => {\r\n    return Object.keys(obj).reduce((o, key) =>{\r\n        const value = obj[key];\r\n        if (typeof value === 'number') {\r\n            //it's a number\r\n            return {...o, [key]: Math.round(value * 10) / 10}\r\n        }else{\r\n            return {...o, [key]: value}\r\n        }\r\n        \r\n    },{})\r\n}\r\n\r\nexport const degreeToRadians = (angle) => {\r\n    return angle * (Math.PI / 180); \r\n}","\r\nimport React, {useContext, useEffect, useRef, useState} from \"react\"\r\nimport { Stage, Container, Sprite, Text } from '@inlet/react-pixi';\r\n\r\nimport * as PIXI from \"pixi.js\"\r\nimport ObjectContainer from \"../pixijs/ObjectContainer\"; \r\nimport {CANVAS_OBJECT_TYPES} from \"../redux/canvasObjects/canvasObjects.types\"\r\n/*\r\n    background image\r\n\r\n    - more images\r\n    - text\r\n    - shapes?\r\n\r\n    // draggable\r\n    https://codesandbox.io/s/react-pixi-viewport-with-dragging-p4wve?from-embed=&file=/src/Draggable.tsx:140-153\r\n\r\n\r\n    []\r\n\r\n    {\r\n        id: {\r\n            selected: false\r\n            type: \"text\" | \"image\" | \"form\"\r\n            x: \r\n            y:\r\n            rotation:\r\n            width: \r\n            height: \r\n            anchor\r\n            ?image\r\n            ?fill\r\n        }\r\n    }\r\n\r\n    [leveling]\r\n\r\n*/\r\nimport \"../styles/components/canvas.scss\"\r\nimport CanvasStartOverlay from \"./CanvasOverlay\";\r\nimport {app, setUpApp, render} from \"../pixijs/PixiApp\"\r\n\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {setCanvas} from \"../redux/canvas/canvas.actions\"\r\n\r\nimport Viewport from \"./Viewport\";\r\n\r\n\r\nconst Canvas = () => {\r\n    const canvasRef = useRef()\r\n    const dispatch = useDispatch()\r\n    const canvasSize = useSelector((state) => ({width: state.canvas.width, height: state.canvas.height}))\r\n    const showOverlay = useSelector((state) => state.canvas.showOverlay)\r\n    const baseImage = useSelector((state) => state.canvas.baseImage)\r\n    const canvasObjects = useSelector((state) => state.canvasObjects.objects)\r\n    const canvasObjectList = useSelector((state) => state.canvasObjects.objectList)\r\n\r\n\r\n    useEffect(() => {\r\n        // set up pixi js\r\n\r\n      \r\n        setUpApp(canvasRef.current, canvasSize)\r\n        dispatch(setCanvas(canvasRef.current))\r\n    },[])\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    console.log(canvasObjectList)\r\n    console.log(canvasObjects)\r\n\r\n    return (\r\n        <div className=\"canvas\">\r\n            <CanvasStartOverlay show={showOverlay} />\r\n            <div style={{width: canvasSize.width, height: canvasSize.height}} ref={canvasRef} ></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Canvas;","import React from \"react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\r\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\r\n\r\nconst PixiComponentViewport = PixiComponent(\"Viewport\", {\r\n  create: (props) => {\r\n    const viewport = new PixiViewport({\r\n      screenWidth: props.width,\r\n      screenHeight: props.height,\r\n      worldWidth: props.width * 2,\r\n      worldHeight: props.height * 2,\r\n      ticker: props.app.ticker,\r\n      interaction: props.app.renderer.plugins.interaction\r\n    });\r\n    viewport.drag({ pressDrag: false }).pinch().wheel().clampZoom();\r\n\r\n    return viewport;\r\n  }\r\n});\r\n\r\nconst Viewport = (props) => {\r\n  const app = useApp();\r\n  return <PixiComponentViewport app={app} {...props} />;\r\n};\r\n\r\nexport default Viewport;\r\n","import React, {useState, useContext, useEffect} from \"react\"\r\nimport CanvasObjectContext from \"../contexts/CanvasObjectContext\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport {updateObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport{normalizeValues} from \"../utils/math.utils\"\r\n\r\n/*\r\n    attributes\r\n    x,y,rotation\r\n    text\r\n    fontSize\r\n    fill\r\n    stroke,\r\n    strokeWidth,\r\n    font?\r\n\r\n*/\r\n\r\nconst ElementEditorText = ({object}) => {\r\n   const dispatch = useDispatch()\r\n\r\n    const onChange = (e) => {\r\n\r\n        dispatch(updateObject(object.id, {\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const nObject = normalizeValues(object)\r\n    \r\n    return (\r\n        <div className=\"text-editor\">\r\n          <label className=\"text-editor__label-text\">text:</label>\r\n          <input type=\"text\" className=\"text-editor__input-text\" name=\"text\" value={nObject?.text} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-x\">x:</label>\r\n          <input type=\"number\" className=\"text-editor__input-x\" name=\"x\" value={nObject?.x} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-y\">y:</label>\r\n          <input type=\"number\" className=\"text-editor__input-y\" name=\"y\" value={nObject?.y} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-rotation\">rotation:</label>\r\n          <input type=\"number\" className=\"text-editor__input-rotation\" name=\"rotation\" value={nObject?.rotation} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-font-size\">size:</label>\r\n          <input type=\"number\" className=\"text-editor__input-font-size\" name=\"fontSize\" value={nObject?.fontSize} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-color\">color:</label>\r\n          <input type=\"color\" className=\"text-editor__input-color\" name=\"fill\" value={nObject?.fill} onChange={onChange}/>\r\n\r\n          <label className=\"text-editor__label-stroke-width\">strokeWidth:</label>\r\n          <input type=\"number\" className=\"text-editor__input-stroke-width\" name=\"strokeWidth\" value={nObject?.strokeWidth} onChange={onChange}/>\r\n           \r\n\r\n          <label className=\"text-editor__label-stroke\">stroke:</label>\r\n          <input type=\"color\" className=\"text-editor__input-stroke\" name=\"stroke\" value={nObject?.stroke} onChange={onChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ElementEditorText","import React, {useState, useContext, useEffect} from \"react\"\r\n\r\nimport { useDispatch } from \"react-redux\"\r\nimport {updateObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport {normalizeValues} from \"../utils/math.utils\"\r\n\r\n/*\r\n    attributes\r\n    x,y,rotation\r\n    width, height\r\n*/\r\n\r\n\r\n\r\n\r\nconst ElementEditorImage = ({object}) => {\r\n   const dispatch = useDispatch()\r\n\r\n    const onChange = (e) => {\r\n\r\n        dispatch(updateObject(object.id, {\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const nObject = normalizeValues(object)\r\n    \r\n    return (\r\n        <div className=\"image-editor\">\r\n            <label className=\"image-editor__label-x\">x:</label>\r\n            <input type=\"number\" className=\"image-editor__input-x\" name=\"x\" value={nObject?.x} onChange={onChange}/>\r\n\r\n            <label className=\"image-editor__label-y\">y:</label>\r\n            <input type=\"number\" className=\"image-editor__input-y\" name=\"y\" value={nObject?.y} onChange={onChange}/>\r\n\r\n            <label className=\"image-editor__label-rotation\">rotation:</label>\r\n            <input type=\"number\" className=\"image-editor__input-rotation\" name=\"rotation\" value={nObject?.rotation} onChange={onChange}/>\r\n\r\n            <label className=\"image-editor__label-width\">width:</label>\r\n            <input type=\"number\" className=\"image-editor__input-width\" name=\"width\" value={nObject?.width} onChange={onChange}/>\r\n\r\n            <label className=\"image-editor__label-height\">height:</label>\r\n            <input type=\"number\" className=\"image-editor__input-height\" name=\"height\" value={nObject?.height} onChange={onChange}/>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ElementEditorImage","import React, {useContext} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {CANVAS_OBJECT_TYPES} from \"../redux/canvasObjects/canvasObjects.types\"\r\n\r\nimport TextEditor from \"./ElementEditorText\"\r\nimport ImageEditor from \"./ElementEditorImage\"\r\n\r\nconst CurrentlySelectedElementUI = () => {\r\n    const activeObject = useSelector((state) => state.canvasObjects.activeObject)\r\n    const objects = useSelector((state) => state.canvasObjects.objects)\r\n\r\n\r\n    const renderActiveObjectEdtior = (activeObject) => {\r\n        const obj = objects[activeObject];\r\n        switch(obj?.type){\r\n            case CANVAS_OBJECT_TYPES.TEXT:\r\n                return <TextEditor object={obj} />\r\n            case CANVAS_OBJECT_TYPES.IMAGE:\r\n                return <ImageEditor object={obj} />\r\n            default: \r\n                return null;\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <div className=\"selected-ui\">\r\n\r\n            <div className=\"editor\">\r\n\r\n                {activeObject ? \r\n                   renderActiveObjectEdtior(activeObject)\r\n                :\r\n                    \"select an item to edit\"\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentlySelectedElementUI","import React from \"react\"\r\n\r\nconst Editor = ({children, className}) => (\r\n    <div className={`editor ${className}`}>\r\n        {children}\r\n    </div>\r\n)\r\n\r\nexport const EditorRow = ({children, className}) => (\r\n    <div className={`editor__row ${className}`}>\r\n        {children}\r\n    </div>\r\n)\r\n\r\nexport const EditorField = ({children, className}) => (\r\n    <div className={`editor__field ${className}`}>\r\n        {children}\r\n    </div>\r\n)\r\n\r\nexport const EditorInput = ({className, ...props}) => (\r\n    <input className={`editor__field ${className}`} {...props}/>\r\n)\r\n\r\nexport default Editor","import React, {useState, useContext} from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {createTextObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\n\r\nimport Editor, {EditorField, EditorRow, EditorInput} from \"./Editor\";\r\n\r\n\r\nconst TextCreator = () => {\r\n    const dispatch = useDispatch()\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const onTextChange = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const onClick = () => {\r\n        // add text element\r\n        dispatch(createTextObject(text))\r\n    }\r\n\r\n    return (\r\n        <Editor className=\"editor--min\">\r\n            <EditorRow>\r\n                <EditorField>\r\n                    <EditorInput type=\"text\" onChange={onTextChange} value={text}/> \r\n                </EditorField>\r\n            </EditorRow>\r\n            <button className=\"button button--main mt--1\" onClick={onClick}>Add Text To Canvas</button>\r\n        </Editor>\r\n    )\r\n}\r\n\r\nexport default TextCreator","import React from \"react\"\r\nimport \"../styles/components/image-upload.scss\"\r\nconst ImageUpload = ({image, onChange}) => {\r\n\r\n    const src = image ? image.src : null;\r\n\r\n    return (\r\n        <label className=\"image-upload\">\r\n            <input type=\"file\" accept=\"image/*\"   name=\"image\" className=\"image-upload__input\" onChange={onChange}  />\r\n            <img className=\"image-upload__img\" src={src} />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default ImageUpload;","import React, {useContext, useEffect, useState} from \"react\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport { createImageObject } from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport {loadImage} from \"../utils/images.utils\"\r\n\r\nimport CanvasObjectContext from \"../contexts/CanvasObjectContext\";\r\n\r\n// render face and button to add to canvas\r\nconst FaceImageDisplay = ({img}) => {\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getImage(img);\r\n    }, [img])\r\n\r\n    const getImage = async (img) => {\r\n        const image = await loadImage(img)\r\n        setImage(image)\r\n    }\r\n\r\n\r\n    const addImageToCanvas = () =>{\r\n        dispatch(createImageObject(image))\r\n    }\r\n\r\n    return (\r\n        <div className=\"face-image\">\r\n            <div className=\"face-image__img-container\">\r\n                <img src={image?.src} className=\"face-image__img\"/>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceImageDisplay\r\n","import React from \"react\"\r\n\r\nimport \"../styles/components/loading-overlay.scss\"\r\n\r\nconst LoadingOverlay = ({isLoading}) => (\r\n    <div className={`loading-overlay ${isLoading && \"loading-overlay--active\"}`}>\r\n        <div class=\"loading-overlay--spinner\"><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default LoadingOverlay;","import React, {useEffect, useRef, useState} from \"react\"\r\nimport * as tfjs from '@tensorflow/tfjs';\r\nimport * as bodyPix from \"@tensorflow-models/body-pix\"\r\nimport * as blazeface from \"@tensorflow-models/blazeface\"\r\n\r\n\r\nimport * as tfjsWasm from '@tensorflow/tfjs-backend-wasm';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport '@tensorflow/tfjs-backend-cpu';\r\n\r\nimport FaceImageDisplay from \"./FaceImageDisplay\";\r\n\r\nimport {canvasToBlob} from \"../utils/images.utils\"\r\nimport \"../styles/components/face-extractor.scss\"\r\n\r\nimport LoadingOverlay from \"../components/LoadingOverlay\"\r\n\r\n\r\n\r\nlet blazefaceModel = null;\r\nlet bodyPixModel = null;\r\n\r\n\r\nconst FaceExtractor = ({image}) => {\r\n    const canvasRef = useRef()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [faceImages, setFaceImages] = useState([])\r\n\r\n    const loadModels = async () => {\r\n        console.log(\"loading models...\")\r\n        if(!blazefaceModel) blazefaceModel = await blazeface.load();\r\n        if(!bodyPixModel) bodyPixModel = await bodyPix.load({         \r\n            architecture: 'ResNet50',\r\n            outputStride: 16,\r\n            quantBytes: 2\r\n        });\r\n    }\r\n\r\n\r\n    const startFaceExtraction = async () => {\r\n        setIsLoading(true)\r\n        await loadModels(image);\r\n        const faces = await extractFaces(image)\r\n        setFaceImages(faces)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    const extractFaces = async (img) => {\r\n        console.log(\"extract Faces\")\r\n        const predictedFaceDimensions = await predictFaces(img)\r\n\r\n        const faceImages = []\r\n        for(let i = 0; i < predictedFaceDimensions.length; i++){\r\n\r\n            console.log(\"face \" + i)\r\n            // crop image\r\n            await cropFace(canvasRef.current, img, predictedFaceDimensions[i])\r\n            \r\n            // remove background\r\n            await segmentFace(canvasRef.current)\r\n\r\n            const faceImage = await canvasToBlob(canvasRef.current)\r\n            faceImage.name =  `${image.name.split(\".\")[0]}-f-${i}.png`;\r\n            faceImage.width =  canvasRef.current.width;\r\n            faceImages.height =   canvasRef.current.height;\r\n            faceImages.push(faceImage)\r\n        }\r\n\r\n        return faceImages;\r\n    }\r\n\r\n    const cropFace = async (canvas, img, predictions) => {\r\n        canvas.width = predictions.width;\r\n        canvas.height = predictions.height;\r\n\r\n        const x = predictions.x ;\r\n        const y = predictions.y ;\r\n        const width = predictions.width;\r\n        const height = predictions.height;\r\n        \r\n        const ctx = canvas.getContext(\"2d\");   \r\n        ctx.drawImage(img, x,y , width, height, 0, 0, canvas.width,  canvas.height)\r\n    }\r\n\r\n    const predictFaces = async (image) => {\r\n        const returnTensors = false; // Pass in `true` to get tensors back, rather than values.\r\n        const predictions = await blazefaceModel.estimateFaces(image, returnTensors);\r\n\r\n        const predictionDimensions = []\r\n        if (predictions.length > 0) {\r\n            for (let i = 0; i < predictions.length; i++) {\r\n                const start = predictions[i].topLeft;\r\n                const end = predictions[i].bottomRight;\r\n                const size = [end[0] - start[0], end[1] - start[1]];\r\n\r\n                const startY = Math.max(start[1] - (size[1] / 1.3), 0)\r\n                const startX = Math.max(start[0] - (size[0] / 4), 0)\r\n                    \r\n                predictionDimensions.push({\r\n                    x: startX,\r\n                    y: startY,\r\n                    width:size[0] * 1.5,\r\n                    height:size[1] * 1.7,\r\n                })\r\n            }\r\n        }\r\n        return predictionDimensions;\r\n    }\r\n\r\n\r\n\r\n    const segmentFace = async (canvas) => {\r\n        const { data:map } = await bodyPixModel.segmentPerson(canvas);\r\n        const ctx = canvas.getContext(\"2d\")\r\n        const { data:imgData } = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n       \r\n        const newImg = ctx.createImageData(canvas.width, canvas.height);\r\n        const newImgData = newImg.data;\r\n\r\n        for(let i=0; i<map.length; i++) {\r\n            //The data array stores four values for each pixel\r\n            const [r, g, b, a] = [imgData[i*4], imgData[i*4+1], imgData[i*4+2], imgData[i*4+3]];\r\n            [\r\n              newImgData[i*4],\r\n              newImgData[i*4+1],\r\n              newImgData[i*4+2],\r\n              newImgData[i*4+3]\r\n            ] = !map[i] ? [255, 255, 255, 0] : [r, g, b, a];\r\n        }\r\n\r\n\r\n        ctx.putImageData(newImg, 0, 0);\r\n  \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"face-extractor\">\r\n            <button  onClick={startFaceExtraction} className=\"button button--main\">Extract Faces</button>\r\n\r\n            <div className=\"face-extractor__display\">\r\n                <LoadingOverlay isLoading={isLoading}></LoadingOverlay>\r\n                    <div className=\"face-extractor__list\">\r\n                        {faceImages.map((faceImage, idx) => {\r\n                            return <FaceImageDisplay img={faceImage} key={`faceimage-${idx}`}/>\r\n                        })}\r\n                    </div>\r\n                \r\n            </div>\r\n           \r\n            <canvas ref={canvasRef} className=\"face-extractor__canvas\"></canvas>\r\n        </div>\r\n    )\r\n}   \r\n\r\n\r\n\r\nexport default FaceExtractor;","import React, {useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {createImageObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport ImageUpload from \"./ImageUpload\";\r\nimport FaceExtractor from \"./FaceExtractor\";\r\nimport {loadImage} from \"../utils/images.utils\"\r\n\r\n\r\nconst ImageCreator = () => {\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(null)\r\n    const [isLoadingImage, setIsLoadingImage] = useState(null)\r\n\r\n    const [faceImages, setFaceImages] = useState([])\r\n\r\n\r\n    const onImageChange = async (e) => {\r\n        console.log(\"load image\")\r\n        const loadedImage = await loadImage(e.target.files[0])\r\n        setImage(loadedImage)\r\n    }\r\n\r\n    const addImageToCanvas = () => {\r\n        dispatch(createImageObject(image))\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui-panel\">\r\n            <ImageUpload image={image} onChange={onImageChange} />\r\n            <button className=\"button button--main mt--1\" onClick={addImageToCanvas}>Add Image To Canvas</button>\r\n            \r\n            <FaceExtractor image={image} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageCreator","import React, {useState} from \"react\"\r\nimport TextCreator from \"./ElementCreatorText\"\r\nimport ImageCreator from \"./ElementCreatorImage\"\r\nimport {app} from \"../pixijs/PixiApp\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\n\r\n\r\nconst TAB = {\r\n    IMAGE: \"Image\",\r\n    TEXT: \"text\",\r\n    GRAPHIC: \"graphic\"\r\n}\r\n\r\n\r\nconst CreateElementUI = () => {\r\n    const canvasRef = useSelector((state) => state.canvas.canvasRef)\r\n    const [activeTab, setActiveTab] = useState(TAB.TEXT)\r\n\r\n\r\n    const renderTab = () => {\r\n        switch(activeTab){\r\n\r\n            case TAB.IMAGE:\r\n                return <ImageCreator />\r\n            case TAB.TEXT: \r\n                return <TextCreator />\r\n            default:\r\n                <TextCreator />\r\n        }\r\n    }\r\n\r\n    console.log(\"active tab\")\r\n    console.log(activeTab)\r\n\r\n    const onDownloadClick = () => {\r\n        if(app){\r\n            console.log(app.view)\r\n\r\n           var link = document.createElement('a');\r\n            link.download = 'meme.png';\r\n           \r\n            link.href = app.view.toDataURL(\"image/png\")\r\n            link.click();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-ui\">\r\n\r\n            <div>\r\n                <button className=\"button button--ui button--download\" onClick={onDownloadClick}>Download</button>\r\n            </div>\r\n            <div className=\"create-selector\">\r\n                \r\n                <button className={`button button--ui ${activeTab == TAB.TEXT && \"button--ui--active\"}`} onClick={() => setActiveTab(TAB.TEXT)}>\r\n                    Text\r\n                </button>\r\n\r\n                <button className={`button button--ui ${activeTab == TAB.IMAGE && \"button--ui--active\"}`} onClick={() => setActiveTab(TAB.IMAGE)}>\r\n                    Image\r\n                </button>\r\n\r\n              \r\n\r\n             \r\n            </div>\r\n\r\n\r\n            <div>\r\n                {renderTab()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateElementUI","import React, {useContext} from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport CanvasObjectContext from \"../contexts/CanvasObjectContext\"\r\nimport {setActiveObject, deleteObject} from \"../redux/canvasObjects/canvasOjbects.actions\"\r\nimport {showOverlay} from \"../redux/canvas/canvas.actions\"\r\nimport \"../styles/components/canvas-object-label.scss\"\r\nimport \"../styles/components/base-image-display.scss\"\r\n\r\nconst CanvasElementOverviewUI = () => {\r\n   \r\n    const baseImage = useSelector((state) => state.canvas.baseImage)\r\n    const activeObject = useSelector((state) => state.canvasObjects.activeObject)\r\n    const canvasObjects = useSelector((state) => state.canvasObjects.objects)\r\n    const canvasObjectList = useSelector((state) => state.canvasObjects.objectList) \r\n\r\n\r\n    return (\r\n        <div className=\"overview-ui\">\r\n            <BaseImageDisplay />\r\n            <div className=\"object-labels\"> \r\n                {canvasObjectList.length == 0 && (<div>Canvas Element Overview</div>)}\r\n                {canvasObjectList.map((objectID) => {\r\n                    const obj = canvasObjects[objectID];\r\n                    return <CanvasObjectLabel object={obj} active={activeObject == obj.id}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// change, size of canvas\r\nconst BaseImageDisplay = () => {\r\n    const dispatch = useDispatch();\r\n    const canvasDimensions = useSelector((state) => ({width: state.canvas.width, height: state.canvas.height}))\r\n    const baseImage = useSelector(state => state.canvas.baseImage)\r\n\r\n\r\n    let name = \"None\";\r\n    if(baseImage){\r\n        const splitPath = baseImage.src.split(\"/\");\r\n        name = splitPath[splitPath.length-1]\r\n    }\r\n\r\n    const openBaseImageOverlay = () => {\r\n        dispatch(showOverlay())\r\n    }\r\n   \r\n    return (\r\n        <div className=\"base-image-display\"> \r\n            <div className=\"base-image-display__img-container\">\r\n\r\n                {baseImage ? \r\n                <img className=\"base-image-display__img\" src={baseImage.src}/>    \r\n                :\r\n                null\r\n                }\r\n                \r\n            </div>\r\n            <div className=\"base-image-display__info\">\r\n                <div className=\"base-iamge-display__info-text\">BaseImage: {name}</div>\r\n                <div>Dimensions: {canvasDimensions.width} x {canvasDimensions.height}</div>\r\n            </div>\r\n            <button className=\"button button--main mt--1\" onClick={openBaseImageOverlay}>Change Base Image</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CanvasObjectLabel = ({object, active}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const activeObject = () => {\r\n        if(active == false){\r\n            dispatch(setActiveObject(object.id))\r\n        }\r\n    }\r\n\r\n    const dispatchDeleteObject = () => {\r\n        // \r\n        dispatch(deleteObject(object.id))\r\n    }\r\n\r\n    return (\r\n        <div className={`object-label ${active && \"object-label--active\"}`} onClick={activeObject}>\r\n\r\n            <div className=\"object-label__info\">\r\n                <div className=\"object-label__type\">\r\n                    [{object.type}]\r\n                </div>\r\n\r\n                <div className=\"object-label__content\">\r\n                    {object.text}\r\n                </div>\r\n\r\n             \r\n            </div>\r\n\r\n            <button className=\"object-label__delete\" onClick={dispatchDeleteObject}>\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasElementOverviewUI","import React, {useRef, useEffect} from \"react\"\n\n\nimport Canvas from \"./components/Canvas\";\nimport CurrentlySelectedElementUI from \"./components/UIPanelCurrentElement\";\nimport CreateElementUI from \"./components/UIPanelCreatElement\";\nimport UIPanelElementOverview from \"./components/UIPanelElementOverview\";\nimport {CanvasOjbectContextProvider} from \"./contexts/CanvasObjectContext\"\n\nimport \"./styles/main.scss\";\n\nfunction App() {\n\n  \n  return (\n      <div className=\"App\">\n        <Canvas />\n        <CurrentlySelectedElementUI />\n        <CreateElementUI />\n        <UIPanelElementOverview />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from \"./redux/store\"\nimport {Provider} from \"react-redux\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}